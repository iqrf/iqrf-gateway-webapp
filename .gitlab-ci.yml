# Copyright 2017-2021 IQRF Tech s.r.o.
# Copyright 2019-2021 MICRORISC s.r.o.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

image: iqrftech/iqrf-gateway-webapp:tests-bullseye

stages:
  - build-docker-testing
  - test
  - coding-style
  - sentry-release
  - build-package
  - deploy-package
  - build-docker
  - deploy-docs

variables:
  COMPOSER_CACHE_DIR: temp/composer/cache

cache:
  paths:
    - temp/composer/cache

.coding-style_template: &coding-style_template
  stage: coding-style
  needs: []

.npm_template: &npm_template
  before_script:
    - pnpm config set store-dir .pnpm-store
    - pnpm install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .pnpm-store

.test_template: &test_template
  stage: test
  needs: []
  retry: 2
  tags:
    - linux, amd64

.sentry-version_template: &sentry-version_template
  stage: sentry-release
  script:
    - sentry-cli releases new -p iqrf-gateway-webapp -p iqrf-gateway-webapp-frontend ${VERSION}
    - sentry-cli releases set-commits --auto ${VERSION}

.ssh_template: &ssh_template
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  tags:
    - linux

.docker_template:
  image: docker:stable
  services:
    - docker:dind
  stage: build-docker
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  script:
    - docker build -f $DOCKER_FILE -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  tags:
    - linux, docker
  variables:
    DOCKER_IMAGE: iqrftech/iqrf-gateway-webapp

.docker_template_testing:
  extends: .docker_template
  allow_failure: true
  stage: build-docker-testing
  only:
    refs:
      - master
      - schedules
  tags:
    - linux, docker, amd64

build-docker:tests:
  extends: .docker_template_testing
  only:
    - schedules
  variables:
    DOCKER_FILE: docker/tests/bullseye.Dockerfile
    DOCKER_TAG: tests-bullseye

test:
  before_script:
    - update-alternatives --set php /usr/bin/php${PHP_VERSION}
    - composer install --no-progress
  script:
    - vendor/bin/tester -p phpdbg${PHP_VERSION} -c ./tests/php.ini -s ./tests
  after_script:
    - 'for i in $(find ./tests -name \*.actual); do echo "--- $i"; cat $i; echo; echo; done'
  parallel:
    matrix:
      - PHP_VERSION:
        - '7.4'
        - '8.0'
        - '8.1'
        - '8.2'
  <<: *test_template

newman:
  stage: test
  image: docker:latest
  needs: []
  services:
    - docker:dind
  before_script:
    - apk add  --no-cache docker-compose
  script:
    - docker-compose -f api-testing.docker-compose.yml up --build --abort-on-container-exit
  tags:
    - linux, docker, amd64

coverage:
  before_script:
    - update-alternatives --set php /usr/bin/php7.4
    - composer install --no-progress
  script:
    - vendor/bin/tester -p phpdbg7.4 -c ./tests/php.ini -o none --coverage ./coverage.html --coverage-src ./app ./tests
  allow_failure: true
  artifacts:
    paths:
      - 'coverage.html'
    expire_in: 2 weeks
  <<: *test_template

coverage:jest:
  script:
    - pnpm run coverage:unit-ci
  allow_failure: true
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    paths:
      - 'coverage/'
    expire_in: 2 weeks
    when: always
    reports:
      junit:
        - junit.xml
  <<: *test_template
  <<: *npm_template

coding-style:
  script:
    - make cc
  <<: *coding-style_template

doctrine_mapping:
  before_script:
    - update-alternatives --set php /usr/bin/php7.4
    - composer install --no-progress
  script:
    - bin/manager orm:validate-schema --skip-sync
  <<: *coding-style_template

phpstan:
  retry: 2
  before_script:
    - update-alternatives --set php /usr/bin/php7.4
    - composer install --no-progress
  script:
    - make phpstan
  <<: *coding-style_template

eslint:
  script:
    - pnpm run lint
  <<: *coding-style_template
  <<: *npm_template

stylelint:
  script:
    - pnpm run lint:css
  <<: *coding-style_template
  <<: *npm_template

qa:
  before_script:
    - update-alternatives --set php /usr/bin/php7.4
    - composer install --no-progress
  script:
    - make qa
  <<: *coding-style_template

sentry-version:
  before_script:
    - export VERSION=`jq -r .version version.json`"~${CI_PIPELINE_ID}"
  except:
    - tags
  <<: *sentry-version_template

sentry-version_release:
  before_script:
    - export VERSION=`jq -r .version version.json`
  only:
    - tags
  <<: *sentry-version_template

build-package:
  stage: build-package
  except:
    - tags
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - gbp dch -a -S --ignore-branch --snapshot-number="$CI_PIPELINE_ID"
    - debuild -e CI_PIPELINE_ID -b -us -uc -tc
    - mv ../*.deb .
    - mv ../*.changes .
  artifacts:
    paths:
      - './*.deb'
      - './*.changes'
    expire_in: 2 weeks

build-package_release:
  stage: build-package
  only:
    - tags
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - debuild -b -us -uc -tc
    - mv ../*.deb .
    - mv ../*.changes .
  artifacts:
    paths:
      - './*.deb'
      - './*.changes'
    expire_in: 2 weeks

build-package_iqd-gw-01:
  stage: build-package
  except:
    - tags
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - mkdir -p debian/patches
    - cp debian/iqd-gw-01/patches/* debian/patches/
    - ls --format=single-column debian/iqd-gw-01/patches/ >> debian/patches/series
    - gbp dch -a -S --ignore-branch --snapshot-number="$CI_PIPELINE_ID"
    - debuild -e CI_PIPELINE_ID -b -us -uc -tc
    - mv ../*.deb .
    - mv ../*.changes .
  artifacts:
    paths:
      - './*.deb'
      - './*.changes'
    expire_in: 2 weeks

build-package_iqd-gw-01_release:
  stage: build-package
  only:
    - tags
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - mkdir -p debian/patches
    - cp debian/iqd-gw-01/patches/* debian/patches
    - ls --format=single-column debian/iqd-gw-01/patches/ >> debian/patches/series
    - debuild -b -us -uc -tc
    - mv ../*.deb .
    - mv ../*.changes .
  artifacts:
    paths:
      - './*.deb'
      - './*.changes'
    expire_in: 2 weeks

build-package_iqaros:
  stage: build-package
  except:
    - tags
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - mkdir -p debian/patches
    - cp debian/iqd-gw-01/patches/* debian/patches/
    - cp debian/iqaros/patches/* debian/patches/
    - ls --format=single-column debian/iqd-gw-01/patches/ >> debian/patches/series
    - ls --format=single-column debian/iqaros/patches/ >> debian/patches/series
    - gbp dch -a -S --ignore-branch --snapshot-number="$CI_PIPELINE_ID"
    - debuild -e CI_PIPELINE_ID -b -us -uc -tc
    - mv ../*.deb .
    - mv ../*.changes .
  artifacts:
    paths:
      - './*.deb'
      - './*.changes'
    expire_in: 2 weeks

build-package_iqaros_release:
  stage: build-package
  only:
    - tags
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - mkdir -p debian/patches
    - cp debian/iqd-gw-01/patches/* debian/patches/
    - cp debian/iqaros/patches/* debian/patches/
    - ls --format=single-column debian/iqd-gw-01/patches/ >> debian/patches/series
    - ls --format=single-column debian/iqaros/patches/ >> debian/patches/series
    - debuild -b -us -uc -tc
    - mv ../*.deb .
    - mv ../*.changes .
  artifacts:
    paths:
      - './*.deb'
      - './*.changes'
    expire_in: 2 weeks

deploy-apidocs:
  stage: deploy-docs
  environment:
    name: apidocs
    url: https://apidocs.iqrf.org/iqrf-gateway-webapp-api/
  only:
    - master
  script:
    - composer install --no-progress
    - bin/manager open-api:specification > api.json
    - ssh www-deploy@icinga.iqrf.org "rm -f /data/nginx/apidocs/iqrf-gateway-webapp-api/api.json"
    - ssh www-deploy@icinga.iqrf.org "rm -rf /data/nginx/apidocs/iqrf-gateway-webapp-api/schemas/"
    - rsync -hrvz --delete -e ssh api.json www-deploy@icinga.iqrf.org:/data/nginx/apidocs/iqrf-gateway-webapp-api/api.json
    - rsync -hrvz --delete -e ssh api/schemas/* www-deploy@icinga.iqrf.org:/data/nginx/apidocs/iqrf-gateway-webapp-api/schemas/
  <<: *ssh_template

deploy-package-devel:
  stage: deploy-package
  needs:
    - build-package
  environment:
    name: package-devel
    url: https://dl.iqrf.org/iqrf-gateway-webapp/all/devel
  only:
    - master
  script:
    - ssh www-deploy@icinga.iqrf.org "rm -f /data/nginx/dl/iqrf-gateway-webapp/all/devel/*"
    - rsync -hrvz --delete -e ssh iqrf-gateway-webapp_*all.deb www-deploy@icinga.iqrf.org:/data/nginx/dl/iqrf-gateway-webapp/all/devel
  <<: *ssh_template

deploy-package-devel_iqd-gw-01:
  stage: deploy-package
  needs:
    - build-package_iqd-gw-01
  environment:
    name: package-devel_iqd-gw-01
    url: https://dl.iqrf.org/iqrf-gateway-webapp/iqd-gw-01/devel
  only:
    - master
  script:
    - ssh www-deploy@icinga.iqrf.org "rm -f /data/nginx/dl/iqrf-gateway-webapp/iqd-gw-01/devel/*"
    - rsync -hrvz --delete -e ssh iqrf-gateway-webapp_*all.deb www-deploy@icinga.iqrf.org:/data/nginx/dl/iqrf-gateway-webapp/iqd-gw-01/devel
  <<: *ssh_template

deploy-package-devel_iqaros:
  stage: deploy-package
  needs:
    - build-package_iqaros
  environment:
    name: package-devel_iqaros
    url: https://dl.iqrf.org/iqrf-gateway-webapp/iqaros/devel
  only:
    - master
  script:
    - ssh www-deploy@icinga.iqrf.org "rm -f /data/nginx/dl/iqrf-gateway-webapp/iqaros/devel/*"
    - rsync -hrvz --delete -e ssh iqrf-gateway-webapp_*all.deb www-deploy@icinga.iqrf.org:/data/nginx/dl/iqrf-gateway-webapp/iqaros/devel
  <<: *ssh_template

deploy-package-stable:
  stage: deploy-package
  needs:
    - build-package_release
  environment:
    name: package-stable
    url: https://dl.iqrf.org/iqrf-gateway-webapp/all/stable
  only:
    - tags
  script:
    - '[[ "$CI_COMMIT_TAG" =~ ^.*-(alpha|beta|rc)[0-9]*$ ]] && export STABILITY="testing" || export STABILITY="stable"'
    - ssh www-deploy@icinga.iqrf.org "rm -f /data/nginx/dl/iqrf-gateway-webapp/all/${STABILITY}/*.changes"
    - rsync -hrvz --delete -e ssh iqrf-gateway-webapp_*all.deb www-deploy@icinga.iqrf.org:/data/nginx/dl/iqrf-gateway-webapp/all/${STABILITY}
  <<: *ssh_template

deploy-package-stable_iqd-gw-01:
  stage: deploy-package
  needs:
    - build-package_iqd-gw-01_release
  environment:
    name: package-stable_iqd-gw-01
    url: https://dl.iqrf.org/iqrf-gateway-webapp/iqd-gw-01/stable
  only:
    - tags
  script:
    - '[[ "$CI_COMMIT_TAG" =~ ^.*-(alpha|beta|rc)[0-9]*$ ]] && export STABILITY="testing" || export STABILITY="stable"'
    - ssh www-deploy@icinga.iqrf.org "rm -f /data/nginx/dl/iqrf-gateway-webapp/iqd-gw-01/${STABILITY}/*.changes"
    - rsync -hrvz --delete -e ssh iqrf-gateway-webapp_*all.deb www-deploy@icinga.iqrf.org:/data/nginx/dl/iqrf-gateway-webapp/iqd-gw-01/${STABILITY}
  <<: *ssh_template

deploy-package-stable_iqaros:
  stage: deploy-package
  needs:
    - build-package_iqaros_release
  environment:
    name: package-stable_iqaros
    url: https://dl.iqrf.org/iqrf-gateway-webapp/iqaros/stable
  only:
    - tags
  script:
    - '[[ "$CI_COMMIT_TAG" =~ ^.*-(alpha|beta|rc)[0-9]*$ ]] && export STABILITY="testing" || export STABILITY="stable"'
    - ssh www-deploy@icinga.iqrf.org "rm -f /data/nginx/dl/iqrf-gateway-webapp/iqaros/${STABILITY}/*.changes"
    - rsync -hrvz --delete -e ssh iqrf-gateway-webapp_*all.deb www-deploy@icinga.iqrf.org:/data/nginx/dl/iqrf-gateway-webapp/iqaros/${STABILITY}
  <<: *ssh_template

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
