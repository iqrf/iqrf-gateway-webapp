# Copyright 2017-2024 IQRF Tech s.r.o.
# Copyright 2019-2024 MICRORISC s.r.o.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

image: iqrftech/iqrf-gateway-webapp:tests-bookworm

stages:
  - build-docker-testing
  - test
  - coding-style
  - sentry-release
  - jsonnet
  - build-docker
  - deploy-docs

# Templates
.base_template: &base_template
  tags:
    - linux
    - amd64

.coding-style_template: &coding-style_template
  stage: coding-style
  needs: []
  <<: *base_template

.composer_template: &composer_template
  before_script:
    - composer install --no-progress
  cache:
    paths:
      - temp/composer/cache
  variables:
    COMPOSER_CACHE_DIR: temp/composer/cache

.npm_template: &npm_template
  before_script:
    - pnpm config set store-dir .pnpm-store
    - pnpm config set registry http://nexus.iqrf.internal/repository/npmjs.org-proxy/
    - pnpm install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .pnpm-store

.test_template: &test_template
  stage: test
  needs: []
  retry: 2
  <<: *base_template

.sentry-version_template: &sentry-version_template
  stage: sentry-release
  script:
    - sentry-cli releases new -p iqrf-gateway-webapp -p iqrf-gateway-webapp-frontend ${VERSION}
    - sentry-cli releases set-commits --auto ${VERSION}
  <<: *base_template

.ssh_template: &ssh_template
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  <<: *base_template

.docker_template:
  image: docker:stable
  services:
    - docker:dind
  stage: build-docker
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  script:
    - docker build -f $DOCKER_FILE -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  tags:
    - linux, amd64, docker
  variables:
    DOCKER_IMAGE: iqrftech/iqrf-gateway-webapp

.docker_template_testing:
  extends: .docker_template
  allow_failure: true
  stage: build-docker-testing
  only:
    refs:
      - master
      - schedules
  tags:
    - linux, docker, amd64

build-docker:tests:
  extends: .docker_template_testing
  only:
    - schedules
  variables:
    DOCKER_FILE: docker/tests/bookworm.Dockerfile
    DOCKER_TAG: tests-bookworm

# Tests
test:
  <<: *test_template
  <<: *composer_template
  before_script:
    - !reference [.composer_template, before_script]
    - update-alternatives --set php /usr/bin/php${PHP_VERSION}
  script:
    - vendor/bin/tester -p phpdbg${PHP_VERSION} -c ./tests/php.ini -s ./tests
  after_script:
    - 'for i in $(find ./tests -name \*.actual); do echo "--- $i"; cat $i; echo; echo; done'
  parallel:
    matrix:
      - PHP_VERSION:
        - '8.2'
        - '8.3'

coverage:php:
  <<: *test_template
  <<: *composer_template
  before_script:
    - update-alternatives --set php /usr/bin/php8.3
    - !reference [.composer_template, before_script]
    - vendor/bin/tester -c ./tests/php-coverage.ini --info
  script:
    - vendor/bin/tester -c ./tests/php-coverage.ini -o none -o junit:junit.xml --coverage ./coverage.html --coverage-src ./app ./tests
  allow_failure: true
  coverage: '/^\d+% covered/'
  artifacts:
    paths:
      - 'coverage.html'
    expire_in: 2 weeks
    reports:
      junit:
        - junit.xml

build:js:
  <<: *test_template
  <<: *npm_template
  script:
    - 'if [[ "${PACKAGE}" == "api-client" || "${PACKAGE}" == "frontend" || "${PACKAGE}" == "frontend3" ]]; then pnpm --dir packages/daemon-utils build; fi'
    - 'if [[ "${PACKAGE}" == "frontend" || "${PACKAGE}" == "frontend3" ]]; then pnpm --dir packages/api-client build; fi'
    - pnpm --dir packages/${PACKAGE} run build
  parallel:
    matrix:
      - PACKAGE:
          - api-client
          - daemon-utils
          - frontend
          - frontend3

coverage:js:
  <<: *test_template
  <<: *npm_template
  before_script:
    - !reference [.npm_template, before_script]
    - 'if [[ "${PACKAGE}" == "api-client" || "${PACKAGE}" == "frontend" || "${PACKAGE}" == "frontend3" ]]; then pnpm --dir packages/daemon-utils build; fi'
    - 'if [[ "${PACKAGE}" == "frontend" || "${PACKAGE}" == "frontend3" ]]; then pnpm --dir packages/api-client build; fi'
  script:
    - pnpm --dir packages/${PACKAGE} coverage:unit
  allow_failure: true
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    paths:
      - 'packages/${PACKAGE}/coverage/'
    expire_in: 2 weeks
    when: always
    reports:
      junit:
        - packages/${PACKAGE}/junit.xml
  parallel:
    matrix:
      - PACKAGE:
          - api-client
          - frontend
          - frontend3

newman:
  <<: *test_template
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add  --no-cache docker-compose
  script:
    - docker-compose -f api-testing.docker-compose.yml up --build --abort-on-container-exit
  tags:
    - linux, docker, amd64

# Coding style
coding-style:
  <<: *coding-style_template
  <<: *composer_template
  script:
    - make cc

codesniffer:
  <<: *coding-style_template
  <<: *composer_template
  script:
    - vendor/bin/codesniffer --runtime-set php_version 80200 app bin db tests

doctrine_mapping:
  <<: *coding-style_template
  <<: *composer_template
  script:
    - bin/manager orm:validate-schema --skip-sync

phpstan:
  <<: *coding-style_template
  <<: *composer_template
  retry: 2
  script:
    - NETTE_TESTER_RUNNER=1 php vendor/bin/phpstan analyse -c phpstan.neon

eslint:
  <<: *coding-style_template
  <<: *npm_template
  before_script:
    - !reference [.npm_template, before_script]
    - 'if [[ "${PACKAGE}" == "api-client" || "${PACKAGE}" == "frontend" || "${PACKAGE}" == "frontend3" ]]; then pnpm --dir packages/daemon-utils build; fi'
    - 'if [[ "${PACKAGE}" == "frontend" || "${PACKAGE}" == "frontend3" ]]; then pnpm --dir packages/api-client build; fi'
  script:
    - pnpm --dir packages/${PACKAGE} run lint:js
  parallel:
    matrix:
      - PACKAGE:
          - api-client
          - daemon-utils
          - frontend
          - frontend3

stylelint:
  <<: *coding-style_template
  <<: *npm_template
  script:
    - pnpm --dir packages/${PACKAGE} lint:css
  parallel:
    matrix:
      - PACKAGE:
          - frontend
          - frontend3

# Sentry version
sentry-version:
  <<: *sentry-version_template
  before_script:
    - export VERSION=`jq -r .version version.json`"~${CI_PIPELINE_ID}"
  except:
    - tags

sentry-version_release:
  <<: *sentry-version_template
  before_script:
    - export VERSION=`jq -r .version version.json`
  only:
    - tags

# Package builds
jsonnet-build:
  image: alpine:latest
  stage: jsonnet
  script:
    - apk add -U jsonnet
    - jsonnet -o .gitlab/packages.yml .gitlab/packages.jsonnet
  artifacts:
    paths:
      - .gitlab/packages.yml

jsonnet-trigger-packages:
  stage: jsonnet
  needs:
    - jsonnet-build
  trigger:
    forward:
      pipeline_variables: true
    include:
      - artifact: .gitlab/packages.yml
        job: jsonnet-build
    strategy: depend

# Documentation deployment
deploy:docs:openapi:
  <<: *ssh_template
  <<: *composer_template
  stage: deploy-docs
  environment:
    name: apidocs
    url: https://apidocs.iqrf.org/openapi/iqrf-gateway-webapp/
  only:
    - master
  before_script:
    - !reference [.ssh_template, before_script]
    - !reference [.composer_template, before_script]
  script:
    - bin/manager open-api:specification > api.json
    - ssh www-deploy@icinga.iqrf.org "rm -rf /data/nginx/apidocs/openapi/iqrf-gateway-webapp/api.json /data/nginx/apidocs/openapi/iqrf-gateway-webapp/schemas/"
    - rsync -hrvz --delete -e ssh api.json www-deploy@icinga.iqrf.org:/data/nginx/apidocs/openapi/iqrf-gateway-webapp/api.json
    - rsync -hrvz --delete -e ssh api/schemas/* www-deploy@icinga.iqrf.org:/data/nginx/apidocs/openapi/iqrf-gateway-webapp/schemas/

deploy-docs:typedoc:
  <<: *base_template
  <<: *npm_template
  <<: *ssh_template
  stage: deploy-docs
  environment:
    name: apidocs
    url: https://apidocs.iqrf.org/${DEPLOY_DIR}/
  only:
    - master
  before_script:
    - !reference [.npm_template, before_script]
    - !reference [.ssh_template, before_script]
    - 'if [[ "${PACKAGE}" == "api-client" || "${PACKAGE}" == "frontend" || "${PACKAGE}" == "frontend3" ]]; then pnpm --dir packages/daemon-utils build; fi'
    - 'if [[ "${PACKAGE}" == "frontend" || "${PACKAGE}" == "frontend3" ]]; then pnpm --dir packages/api-client build; fi'
  script:
    - pnpm --dir packages/${PACKAGE} docs
    - ssh www-deploy@icinga.iqrf.org "rm -rf /data/nginx/apidocs/${DEPLOY_DIR}/*"
    - rsync -hrvz --delete -e ssh packages/${PACKAGE}/docs/* www-deploy@icinga.iqrf.org:/data/nginx/apidocs/${DEPLOY_DIR}/
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .pnpm-store
  parallel:
    matrix:
      - PACKAGE: api-client
        DEPLOY_DIR: js/iqrf-gateway-webapp-client
      - PACKAGE: daemon-utils
        DEPLOY_DIR: js/iqrf-gateway-daemon-utils
