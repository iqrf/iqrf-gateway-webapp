{
	"$iqrf": {
		"common": {
			"actions": {
				"add": "Add",
				"apply": "Apply",
				"cancel": "Cancel",
				"close": "Close",
				"confirm": "Confirm",
				"delete": "Delete",
				"disable": "Disable",
				"download": "Download",
				"edit": "Edit",
				"enable": "Enable",
				"export": "Export",
				"import": "Import",
				"next": "Next",
				"previous": "Previous",
				"reload": "Reload",
				"reset": "Reset",
				"restart": "Restart",
				"save": "Save",
				"showDetails": "Show details",
				"skip": "Skip",
				"start": "Start",
				"stop": "Stop",
				"upload": "Upload"
			},
			"components": {
				"datatable": {
					"filterColumns": "Filter columns"
				}
			}
		}
	},
	"common": {
		"buttons": {
			"add": "Add",
			"backup": "Backup",
			"cancel": "Cancel",
			"clipboard": "Copy to clipboard",
			"close": "Close",
			"delete": "Delete",
			"deselectAll": "Deselect all",
			"edit": "Edit",
			"import": "Import",
			"refresh": "Refresh",
			"reload": "Reload",
			"restore": "Restore",
			"save": "Save",
			"selectAll": "Select all",
			"send": "Send",
			"skip": "Skip",
			"upload": "Upload"
		},
		"columns": {
			"actions": "Actions",
			"description": "Description",
			"id": "ID"
		},
		"labels": {
			"description": "Description",
			"format": "Format",
			"general": "General",
			"hostname": "Hostname",
			"none": "None",
			"other": "Other",
			"password": "Password",
			"path": "Path",
			"port": "Port",
			"protocol": "Protocol",
			"protocols": {
				"ssl": "Encrypted SSL/TLS",
				"tcp": "Insecure TCP",
				"ws": "Insecure websocket",
				"wss": "Secure websocket"
			},
			"request": "Request",
			"response": "Response",
			"returnVerbose": "Verbose response",
			"severity": {
				"debug": "Debug",
				"error": "Error",
				"info": "Information",
				"trace": "Trace",
				"warning": "Warning"
			},
			"username": "Username",
			"value": "Value"
		},
		"messages": {
			"fetchFailed": "An error has occurred while fetching data."
		},
		"states": {
			"active": "Active",
			"disabled": "Disabled",
			"enabled": "Enabled",
			"inactive": "Inactive",
			"invalid": "Invalid",
			"valid": "Valid"
		},
		"validation": {
			"credentialsMissing": "Please enter both username and password, or leave both fields empty.",
			"email": {
				"format": "Invalid email address format.",
				"required": "Please enter email address."
			},
			"hostnameInvalid": "Hostname should be IPv4, IPv6, localhost or fully-qualified domain name.",
			"hostnameMissing": "Please enter hostname.",
			"password": {
				"minLength": "Password should be at least 8 characters long.",
				"required": "Please enter password."
			},
			"passwordConfirm": {
				"match": "Password does not match.",
				"required": "Please re-type password."
			},
			"portInvalid": "Port should be an integer between 1 and 65535.",
			"portMissing": "Please enter port.",
			"username": {
				"required": "Please enter username."
			}
		}
	},
	"components": {
		"accessControl": {
			"apiKeys": {
				"actions": {
					"add": "Add API key",
					"delete": "Delete API key",
					"edit": "Edit API key"
				},
				"delete": {
					"prompt": "Are you sure you want to delete API key ID {id}?",
					"title": "API key delete confirmation"
				},
				"display": {
					"copyMessage": "API key has been copied to clipboard.",
					"prompt": "Before closing this dialog, copy and store the new API key below in a safe place. For security reasons, you will not be able to view it again at a later time.",
					"title": "Generated API key"
				},
				"form": {
					"addTitle": "Add API key",
					"editTitle": "Edit API key",
					"expiration": "Set expiration"
				},
				"table": {
					"expiration": "Expiration"
				},
				"validations": {
					"description": {
						"required": "Please enter API key description."
					}
				}
			},
			"sshKeys": {
				"actions": {
					"add": "Add SSH key",
					"delete": "Delete SSH key",
					"edit": "Edit SSH key"
				},
				"delete": {
					"prompt": "Are you sure you want to delete SSH public key ID {id}?",
					"title": "SSH public key delete confirmation"
				},
				"fetchFailed": "Failed to retrieve list of supported SSH key types.",
				"form": {
					"addTitle": "Add SSH key",
					"editTitle": "Edit SSH key"
				},
				"installNote": "Add SSH public keys to be used for key-based authorization when accessing the device.",
				"noneSupported": "No SSH key type supported.",
				"supported": "The following SSH key types are supported.",
				"table": {
					"createdAt": "Date created",
					"hash": "Hash",
					"key": "Public key",
					"type": "Key type"
				}
			},
			"users": {
				"actions": {
					"add": "Add user",
					"delete": "Delete user",
					"edit": "Edit user"
				},
				"delete": {
					"prompt": "Are you sure you want to delete user {user}?",
					"title": "User delete confirmation"
				},
				"email": "E-mail address",
				"language": "Language",
				"messages": {
					"delete": {
						"failure": "An error has occurred during user {user} deletion.",
						"success": "User {user} has been deleted successfully."
					}
				},
				"password": "Password",
				"role": "Role",
				"roles": {
					"admin": "Administrator",
					"basic": "Basic user",
					"basicadmin": "Basic admin",
					"normal": "Normal user"
				},
				"state": "State",
				"states": {
					"unverified": "Unverified",
					"verified": "Verified"
				},
				"username": "Username",
				"validations": {
					"email": {
						"email": "Invalid e-mail address format."
					},
					"password": {
						"required": "Please enter the password."
					},
					"username": {
						"required": "Please enter the username."
					}
				}
			}
		},
		"account": {
			"details": {
				"messages": {
					"fetch": {
						"failed": "Failed to retrieve user account data."
					},
					"save": {
						"failed": "Failed to update user account details: {error}",
						"success": "User account details have been successfully updated."
					}
				},
				"title": "Account details"
			},
			"language": {
				"label": "Language"
			},
			"password": {
				"confirmation": "Confirm password",
				"current": "Current password",
				"messages": {
					"save": {
						"failed": "Failed to change password.",
						"success": "Your password has been successfully changed."
					}
				},
				"new": "New password",
				"title": "Change password",
				"validation": {
					"confirmation": {
						"required": "Please re-type new password."
					},
					"current": {
						"required": "Please enter current password."
					},
					"new": {
						"required": "Please enter new password."
					}
				}
			},
			"preferences": {
				"messages": {
					"save": {
						"failed": "Failed to update your user preferences.",
						"success": "Your user preferences have been successfully updated."
					}
				},
				"theme": "Theme",
				"themes": {
					"auto": "System",
					"dark": "Dark",
					"light": "Light"
				},
				"timeFormat": "Time format",
				"timeFormats": {
					"auto": "System",
					"hour12": "12-hour",
					"hour24": "24-hour"
				},
				"title": "Preferences"
			},
			"recovery": {
				"confirmation": {
					"button": "Set new password",
					"messages": {
						"expired": "Password recovery request has expired.",
						"failure": "An error has occurred during password change.",
						"notFound": "Password recovery request not found.",
						"success": "Password successfully changed."
					},
					"prompt": "Please enter new password."
				},
				"request": {
					"button": "Submit request",
					"messages": {
						"failure": "An error has occurred during password recovery request.",
						"notFound": "Unable to request password recovery, user does not exist.",
						"notVerified": "Unable to request password recovery, user email address is not verified.",
						"success": "An email containing further instructions to reset your password was sent to the address associated with the account."
					},
					"prompt": "Please enter username and a password recovery email will be sent to the associated address."
				}
			},
			"verification": {
				"addEmail": "Add e-mail address",
				"messages": {
					"alreadyVerified": "Your email address has already been verified.",
					"failure": "An error has occurred during account verification.",
					"notFound": "Account verification not found.",
					"redirect": "You will be redirected to the dashboard in {countdown}.",
					"requestFailure": "An error has occurred while sending verification email.",
					"requestSuccess": "Verification email successfully sent.",
					"success": "Your account has been successfully verified."
				},
				"missing": "Your account does not have an e-mail address set up. Without the verified e-mail address, you can not reset your password if it is forgotten.",
				"resend": "Resend verification e-mail",
				"title": "Account verification",
				"unverified": "Your e-mail address ({email}) is not verified. Without the verified e-mail address, you can not reset your password if it is forgotten."
			}
		},
		"auth": {
			"expiration": {
				"expirations": {
					"day": "1 day",
					"default": "90 minutes",
					"week": "1 week"
				},
				"label": "Session expiration"
			},
			"sign": {
				"in": {
					"actions": {
						"recoverPassword": "Forgot password?",
						"signIn": "Sign in"
					},
					"messages": {
						"failure": "An error has occurred during sign in.",
						"incorrectUsernameOrPassword": "The username or password you entered is incorrect.",
						"success": "You have been signed in successfully."
					},
					"title": "Sign in"
				},
				"out": {
					"expired": "Your sign-in session has expired. Please sign in again.",
					"message": "You have been signed out.",
					"title": "Sign out"
				}
			}
		},
		"common": {
			"actions": {
				"add": "Add",
				"apply": "Apply",
				"cancel": "Cancel",
				"delete": "Delete",
				"disable": "Disable",
				"download": "Download",
				"edit": "Edit",
				"enable": "Enable",
				"export": "Export",
				"import": "Import",
				"reload": "Reload",
				"restart": "Restart",
				"showDetails": "Show details",
				"start": "Start",
				"stop": "Stop",
				"upload": "Upload"
			},
			"fields": {
				"actions": "Actions",
				"description": "Description",
				"email": "E-mail address",
				"id": "ID",
				"password": "Password",
				"passwordConfirm": "Confirm password",
				"username": "Username"
			},
			"locale": {
				"languages": {
					"cs": "Czech",
					"en": "English"
				},
				"messages": {
					"set": "Locale changed to: {locale}."
				}
			},
			"messages": {
				"fetchFailed": "An error has occurred while fetching data."
			},
			"validations": {
				"email": {
					"email": "Invalid e-mail address format.",
					"required": "Please enter e-mail address."
				},
				"password": {
					"minLength": "Password should be at least 8 characters long.",
					"required": "Please enter password."
				},
				"passwordConfirm": {
					"match": "Password does not match.",
					"required": "Please re-type password."
				},
				"port": {
					"between": "Port should be an integer between 1 and 65535.",
					"required": "Please enter port"
				},
				"username": {
					"required": "Please enter username."
				}
			}
		},
		"config": {
			"controller": {
				"form": {
					"autonetwork": {
						"abortOnTooManyNodesFound": "Abort Autonetwork if more nodes than the network can contain are found",
						"actionRetries": "Action retries",
						"discoveryBeforeStart": "Run discovery before starting autonetwork",
						"discoveryTxPower": "Discovery TX power",
						"emptyWaves": "Maximum number of empty waves",
						"skipDiscoveryEachWave": "Skip discovery in each wave",
						"stopConditions": "Stop conditions",
						"waves": "Maximum number of waves"
					},
					"button": {
						"action": "Action",
						"actions": {
							"autonetwork": "Autonetwork",
							"discovery": "Discovery",
							"none": "None"
						},
						"configure": "Configure"
					},
					"discovery": {
						"maxAddr": "Maximum node address",
						"txPower": "TX power"
					},
					"factoryReset": {
						"coordinator": "Coordinator",
						"iqaros": "IQAROS",
						"network": "IP network"
					},
					"logging": {
						"path": "Path to log file",
						"severity": "Severity level",
						"sinks": {
							"file": "Log to file",
							"syslog": "Log to syslog"
						}
					},
					"pins": {
						"button": "Action button GPIO pin",
						"greenLed": "Green LED GPIO pin",
						"redLed": "Red LED GPIO pin",
						"sck": "I2C clock GPIO pin",
						"sda": "I2C data GPIO pin",
						"useWatchdogPins": "Use hardware Watchdog Timer pins"
					},
					"sections": {
						"button": "Action button",
						"factoryReset": "Factory reset",
						"logging": "Logging",
						"pins": "Pin configuration",
						"websocket": "Websocket"
					},
					"websocket": {
						"api": "Daemon API",
						"monitor": "Monitor"
					}
				},
				"messages": {
					"save": {
						"success": "IQRF Gateway Controller configuration was successfully saved. Restart the service for changes to take effect."
					}
				},
				"validation": {
					"buttonPin": "Please enter action button GPIO pin as an integer.",
					"greenLed": "Please enter green LED GPIO pin as an integer.",
					"logPath": "Please enter path to log file.",
					"redLed": "Please enter red LED GPIO pin as an integer.",
					"sck": "Please enter I2C clock GPIO pin as an integer.",
					"sda": "Please enter I2C data GPIO pin as an integer."
				}
			},
			"daemon": {
				"component": "Component name",
				"connections": {
					"acceptAsyncMessages": "Accept asynchronous messages",
					"acceptOnlyLocalhost": "Accept only localhost connections",
					"actions": {
						"add": "Create connection profile",
						"delete": "Delete connection profile",
						"edit": "Edit connection profile",
						"export": "Export connection profile",
						"import": "Import connection profile",
						"reload": "Reload connection profiles"
					},
					"cipherSuites": "Cipher suites",
					"enableTls": "Enable TLS",
					"keyStore": "Key store",
					"messages": {
						"profileFileInvalid": "Selected file is not a valid connection profile file."
					},
					"mqtt": {
						"broker": "Broker URL",
						"clientId": "Client ID",
						"clouds": {
							"add": "Create cloud connection profile",
							"aws": {
								"certificate": "Certificate",
								"endpoint": "Endpoint",
								"privateKey": "Private key",
								"title": "Amazon AWS IoT",
								"validation": {
									"certificateMissing": "Please select certificate file.",
									"endpointMissing": "Please enter endpoint.",
									"privateKeyMissing": "Please select private key file."
								}
							},
							"azure": {
								"connectionString": "IoT Hub device connection string",
								"title": "Microsoft Azure IoT Hub",
								"validation": {
									"connectionStringMissing": "Please enter IoT Hub device connection string."
								}
							},
							"ibm": {
								"deviceId": "Device ID",
								"deviceType": "Device type",
								"eventId": "Command and event ID",
								"orgId": "Organization ID",
								"title": "IBM Cloud",
								"token": "Authentication token",
								"validation": {
									"deviceIdMissing": "Please enter device ID.",
									"deviceTypeMissing": "Please enter device type.",
									"eventIdMissing": "Please enter command and event ID.",
									"orgIdMissing": "Please enter organization ID.",
									"tokenMissing": "Please enter authentication token."
								}
							},
							"messages": {
								"save": {
									"success": "MQTT cloud connection successfully added."
								}
							}
						},
						"delete": {
							"prompt": "Are you sure you want to delete MQTT connection profile {name}?",
							"title": "MQTT connection profile delete confirmation"
						},
						"import": {
							"title": "MQTT connection profile import"
						},
						"keepAlive": "Keep-alive interval",
						"maxReconnect": "Maximum reconnect period",
						"messages": {
							"delete": {
								"success": "MQTT connection profile {name} successfully deleted."
							},
							"persistence": {
								"application": "Persistence control is delegated to the application.",
								"filesystem": "State of in-flight messages is held in persistent storage and prevents loss of messages to some degree in case of a client failure.",
								"memory": "State of in-flight messages is lost in case of a client shutdown or failure. Some messages may not be delivered even with QoS 1 or higher."
							},
							"qos": {
								"atLeastOnce": "Messages are guaranteed to be delivered at least once by acknowledging receipt of a message.",
								"atMostOnce": "Fastest method, but the delivery of a message is not guaranteed.",
								"exactlyOnce": "Safest but slowest method. Message is guaranteed to be delivered exactly once utilizing a 4-part handshake."
							},
							"save": {
								"success": "MQTT connection profile {name} successfully saved."
							}
						},
						"minReconnect": "Minimum reconnect period",
						"persistence": "Persistence",
						"persistenceLevels": {
							"application": "Application-specific",
							"filesystem": "File system-based",
							"memory": "In-memory"
						},
						"qos": "Quality of Service",
						"qosLevels": {
							"atLeastOnce": "QoS 1 - At least once",
							"atMostOnce": "QoS 0 - At most once",
							"exactlyOnce": "QoS 2 - Exactly once"
						},
						"requestTopic": "Request topic",
						"responseTopic": "Response topic",
						"timeout": "Connection timeout",
						"validation": {
							"clientIdMissing": "Please enter MQTT client ID.",
							"keepAliveInvalid": "Keep alive interval should be a positive integer.",
							"keepAliveMissing": "Please enter keep alive interval.",
							"maxReconnectInvalid": "Maximum reconnect period should be at integer greater or equal to 1 second.",
							"maxReconnectLow": "Maximum reconnect period should be greater or equal to minimum reconnect period.",
							"maxReconnectMissing": "Please enter maximum reconnect period.",
							"minReconnectHigh": "Minimum reconnect period should be less or equal to maximum reconnect period.",
							"minReconnectInvalid": "Minimum reconnect period should be an integer greater or equal to 1 second.",
							"minReconnectMissing": "Please enter minimum reconnect period.",
							"requestTopicMissing": "Please enter request topic.",
							"responseTopicMissing": "Please enter response topic.",
							"timeoutInvalid": "Connection timeout should be a positive integer.",
							"timeoutMissing": "Please enter connection timeout."
						}
					},
					"privateKey": "Private key",
					"privateKeyPassword": "Private key password",
					"profile": "Connection profile",
					"profileFile": "Connection profile file",
					"serverCertAuth": "Enable server certificate authentication",
					"tls": "TLS",
					"trustStore": "Trust store",
					"udp": {
						"delete": {
							"prompt": "Are you sure you want to delete UDP connection profile {name}?",
							"title": "UDP connection profile delete confirmation"
						},
						"expiration": "UDP client records expiration (in seconds)",
						"import": {
							"title": "UDP connection profile import"
						},
						"localPort": "Local port",
						"messages": {
							"delete": {
								"success": "UDP connection profile {name} successfully deleted."
							},
							"save": {
								"success": "UDP connection profile {name} successfully saved."
							}
						},
						"remotePort": "Remote port",
						"validation": {
							"expirationInvalid": "Client records expiration should be an integer greater or equal to 0.",
							"expirationMissing": "Please enter client records expiration.",
							"localPortInvalid": "Local port should be an integer between 1 and 65535.",
							"localPortMissing": "Please enter local port.",
							"remotePortInvalid": "Remote port should be an integer between 1 and 65535.",
							"remotePortMissing": "Please enter remote port."
						}
					},
					"validation": {
						"profileFileMissing": "Please select connection profile file.",
						"profileMissing": "Please enter connection profile name."
					}
				},
				"db": {
					"autoEnumerate": "Run enumeration automatically without manual invocation",
					"enumerateOnLaunch": "Run enumeration on Daemon launch",
					"includeMetadata": "Include device metadata in response messages",
					"messages": {
						"save": {
							"success": "Database configuration successfully saved."
						}
					}
				},
				"instance": "Instance name",
				"interfaces": {
					"active": {
						"interface": "IQRF interface",
						"messages": {
							"save": {
								"success": "IQRF interface successfully changed."
							}
						},
						"title": "Active IQRF interface"
					},
					"apply": "Apply interface",
					"busPin": "Bus enable GPIO pin",
					"cdc": {
						"devices": "CDC interfaces",
						"messages": {
							"save": {
								"success": "IQRF USB CDC configuration successfully saved."
							}
						}
					},
					"dpa": {
						"messages": {
							"save": {
								"success": "IQRF DPA configuration successfully saved."
							}
						},
						"timeout": "DPA handler timeout",
						"validation": {
							"timeoutInvalid": "DPA handler timeout should be an integer greater or equal to 0.",
							"timeoutMissing": "Please enter DPA handler timeout"
						}
					},
					"i2cPin": "I2C enable GPIO pin",
					"interface": "Interface name",
					"interfacePins": "Use communication interface pins",
					"pgmPin": "Programming mode switch GPIO pin",
					"powerPin": "Power enable GPIO pin",
					"profiles": {
						"spi": "SPI device profiles",
						"uart": "UART device profiles"
					},
					"spi": {
						"devices": "SPI interfaces",
						"messages": {
							"save": {
								"success": "IQRF SPI configuration successfully saved."
							}
						},
						"spiReset": "Enable SPI reset"
					},
					"spiPin": "SPI enable GPIO pin",
					"uart": {
						"baudRate": "Baud rate",
						"devices": "UART interfaces",
						"messages": {
							"save": {
								"success": "IQRF UART configuration successfully saved."
							}
						},
						"uartReset": "Enable UART reset"
					},
					"uartPin": "UART enable GPIO pin",
					"validation": {
						"busPinInvalid": "Bus enable GPIO pin should be an integer.",
						"busPinMissing": "Please enter bus enable GPIO pin",
						"i2cPinInvalid": "I2C enable GPIO pin should be an integer.",
						"i2cPinMissing": "Please enter I2C enable GPIO pin.",
						"interfaceMissing": "Please enter interface name.",
						"pgmPinInvalid": "Programming mode switch GPIO pin should be an integer.",
						"pgmPinMissing": "Please enter programming mode switch GPIO pin.",
						"powerPinInvalid": "Power enable GPIO pin should be an integer.",
						"powerPinMissing": "Please enter power enable GPIO pin.",
						"spiPinInvalid": "SPI enable GPIO pin should be an integer.",
						"spiPinMissing": "Please enter SPI enable GPIO pin.",
						"uartPinInvalid": "UART enable GPIO pin should be an integer.",
						"uartPinMissing": "Please enter UART enable GPIO pin."
					}
				},
				"json-api": {
					"instanceId": "Instance ID",
					"messages": {
						"save": {
							"success": "JSON API configuration successfully saved."
						}
					},
					"validateResponses": "Validate JSON responses",
					"validation": {
						"instanceIdMissing": "Please enter instance ID."
					}
				},
				"logging": {
					"actions": {
						"add": "Add logging profile",
						"delete": "Delete logging profile",
						"edit": "Edit logging profile",
						"reload": "Reload logging profiles"
					},
					"channel": "Logging channel",
					"channels": {
						"actions": {
							"add": "Add logging channel",
							"delete": "Delete logging channel",
							"deleteAll": "Delete all logging channels",
							"edit": "Edit logging channel"
						},
						"noChannels": "No logging channels specified.",
						"title": "Logging channels"
					},
					"delete": {
						"prompt": "Are you sure you want to delete logging profile {name}?",
						"title": "Logging profile delete confirmation"
					},
					"filename": "File name",
					"logDir": "Path to log directory",
					"maxAge": "Maximum lifespan of log files to keep",
					"maxNumber": "Maximum number of log files to keep",
					"maxSize": "Maximum file size in bytes",
					"messages": {
						"delete": {
							"success": "Logging profile {name} has been successfully deleted."
						},
						"save": {
							"success": "Logging profile {name} has been successfully saved."
						}
					},
					"notes": {
						"timestampsDisabled": "Setting value to 0 disables this feature."
					},
					"profile": "Logging profile",
					"severity": "Logging severity",
					"timestamps": "Split and rotate log files",
					"validation": {
						"channelInvalid": "Logging channel should be an integer greater or equal to 0.",
						"channelMissing": "Please enter logging channel.",
						"maxAgeInvalid": "Maximum lifespan of log files should greater or equal to 0.",
						"maxAgeMissing": "Please enter maximum lifespan of log files.",
						"maxNumberInvalid": "Maximum number of log files to keep should be an integer greater or equal to 0.",
						"maxNumberMissing": "Please enter maximum number of log files to keep."
					},
					"validations": {
						"filename": {
							"required": "Please enter file name."
						},
						"logDir": {
							"required": "Please enter path to log directory."
						},
						"maxSize": {
							"min": "Maximum file size should be an integer greater or equal to 1.",
							"required": "Please enter maximum file size."
						},
						"profile": {
							"required": "Please enter logging profile name."
						}
					}
				},
				"repository": {
					"messages": {
						"save": {
							"success": "IQRF repository configuration successfully saved."
						}
					},
					"update": "Update repository cache periodically",
					"updatePeriod": "Repository cache update period (in minutes)",
					"url": "Repository URL",
					"validation": {
						"updatePeriodInvalid": "Repository cache update period should be an integer greater or equal to 0.",
						"updatePeriodMissing": "Please enter repository cache update period.",
						"urlMissing": "Please enter repository url."
					}
				},
				"scheduler": {
					"actions": {
						"add": "Add task",
						"delete": "Delete task",
						"deleteAll": "Delete all tasks",
						"edit": "Edit task",
						"export": "Export tasks",
						"import": "Import tasks",
						"reload": "Reload tasks",
						"start": "Start task",
						"stop": "Stop task"
					},
					"cron": "Time in cron format",
					"delete": {
						"prompt": "Are you sure you want to delete task {id}?",
						"title": "Task delete confirmation"
					},
					"deleteAll": {
						"prompt": "Are you sure you want to delete all tasks?",
						"title": "Tasks delete confirmation"
					},
					"enabled": "Start task automatically",
					"import": {
						"file": "Task JSON file or ZIP archive",
						"imported": "Imported",
						"reason": "Reason",
						"title": "Import task(s)"
					},
					"messages": {
						"add": {
							"success": "Task {id} successfully created."
						},
						"delete": {
							"success": "Task {id} successfully deleted."
						},
						"deleteAll": {
							"success": "All tasks have been deleted."
						},
						"import": {
							"archiveInvalid": "",
							"fileInvalid": "",
							"jsonInvalid": "",
							"success": "Scheduler tasks have been successfully imported."
						},
						"start": {
							"success": "Task {id} successfully started."
						},
						"stop": {
							"success": "Task {id} successfully stopped."
						}
					},
					"noMessages": "No task messages specified.",
					"noTasks": "No tasks defined.",
					"oneshot": "Execution time",
					"period": "Period in seconds",
					"persist": "Persistent task",
					"task": {
						"actions": {
							"add": "Add message",
							"delete": "Delete message",
							"deleteAll": "Delete all messages",
							"edit": "Edit message"
						},
						"mType": "Message type",
						"message": "Message (JSON API request)",
						"messaging": "Connection profiles",
						"title": "Task messages"
					},
					"taskId": "Task ID",
					"time": "Time",
					"type": "Task execution condition",
					"types": {
						"cron": "Cron time expression - specifies when and how frequently a task is executed",
						"oneshot": "Oneshot - execute task once at specified time",
						"periodic": "Periodic - frequency of task execution in seconds"
					},
					"validation": {
						"cronMissing": "Please enter a valid 7 field cron time expression.",
						"importFileMissing": "Please select a task JSON file or ZIP archive.",
						"messageInvalid": "Task message should be a valid Daemon JSON API request.",
						"messageMissing": "Please enter task message.",
						"periodInvalid": "Task execution period should be an integer greater than 0.",
						"periodMissing": "Please enter task execution period in seconds.",
						"taskIdInvalid": "Task ID should be UUID version 4 string.",
						"taskIdMissing": "Please enter task ID."
					}
				},
				"validation": {
					"instanceMissing": "Please enter instance name."
				}
			},
			"influxdb-bridge": {
				"actions": {
					"add": "Add subscription topic",
					"delete": "Delete subscription topic",
					"deleteAll": "Delete all subscription topics",
					"edit": "Edit subscription topic"
				},
				"devicesBucket": "Devices bucket name",
				"gatewayBucket": "Gateway bucket name",
				"influx": "InfluxDB client",
				"messages": {
					"save": {
						"success": "IQRF Gateway InfluxDB Bridge configuration successfully saved."
					}
				},
				"mqtt": "MQTT client",
				"noTopics": "No subscription topics specified.",
				"notes": {
					"newAuth": "Token is used for v2+ authentication. A token can be used for authentication in version 1.8 with the format <user:password>.",
					"oldAuth": "User and password are used for v1.x authentication."
				},
				"org": "Organization",
				"sensorsBucket": "Sensor bucket name",
				"token": "Authentication token",
				"topic": "Topic",
				"topicTitle": "Subscriptions",
				"validation": {
					"devicesBucketMissing": "Please enter devices bucket name.",
					"gatewayBucketMissing": "Please enter gateway bucket name.",
					"orgMissing": "Please enter organization name.",
					"sensorsBucketMissing": "Please enter sensors bucket name.",
					"topic": "Please enter subscription topic."
				}
			},
			"journal": {
				"forwardToSyslog": "Forward journal to syslog",
				"maxFileSize": "Maximum log size in MB",
				"maxFiles": "Maximum number of log files to keep",
				"maxSize": "Maximum disk space used by journal in MB",
				"messages": {
					"save": {
						"success": "Journal configuration successfully saved."
					}
				},
				"notes": {
					"maxFiles": "Systemd default value is 100 files.",
					"systemDefault": "Set value to 0 to use systemd default."
				},
				"sizeRotation": "File-size based log rotation",
				"storage": "Storage method",
				"storages": {
					"persistent": "Filesystem persistence",
					"volatile": "In-memory persistence"
				},
				"timeRotation": "Time-based log rotation",
				"timeUnit": "Time unit",
				"timeUnits": {
					"days": "Days",
					"hours": "Hours",
					"minutes": "Minutes",
					"months": "Months",
					"seconds": "Seconds",
					"weeks": "Weeks",
					"years": "Years"
				},
				"unitCount": "Unit count",
				"validation": {
					"maxFileSizeInvalid": "Maximum log file size should be an integer greater or equal to 0.",
					"maxFileSizeMissing": "Please enter maximum log file size.",
					"maxFilesInvalid": "Maximum number of files to keep should be an integer greater or equal to 1.",
					"maxFilesMissing": "Please enter maximum number of log files to keep.",
					"maxSizeInvalid": "Maximum disk space used should be an integer greater or equal to 0.",
					"maxSizeMissing": "Please enter maximum disk space usable by journal.",
					"unitCountInvalid": "Unit count should be an integer greater or equal to 1.",
					"unitCountMissing": "Please enter unit count."
				}
			},
			"mender": {
				"client": {
					"cert": "Path to certificate",
					"inventoryPollInterval": "Inventory update interval (seconds)",
					"retryPollInterval": "Connection retry interval (seconds)",
					"server": "Mender server URL",
					"tenantToken": "Tenant token",
					"updatePollInterval": "Update check interval (seconds)"
				},
				"connect": {
					"fileTransfer": "File Transfer",
					"portForward": "Port Forwarding"
				},
				"connection": "Connection",
				"features": "Enabled features",
				"inventory": "Inventory",
				"messages": {
					"save": {
						"success": "Mender configuration has been successfully saved."
					},
					"upload": {
						"success": "Certificate has been successfully uploaded."
					}
				},
				"upload": {
					"cert": "Certificate to upload",
					"certPath": "Path to uploaded certificate",
					"title": "Mender certificate upload"
				},
				"validation": {
					"certificateMissing": "Please select certificate file to upload.",
					"inventoryPollIntervalInvalid": "Inventory poll interval should be an integer greater or equal to 0.",
					"inventoryPollIntervalMissing": "Please enter inventory poll interval.",
					"retryPollIntervalInvalid": "Connection retry interval should be an integer greater or equal to 0.",
					"retryPollIntervalMissing": "Please enter connection retry interval.",
					"serverInvalid": "Mender server URL should be IPv4, IPv6, localhost or fully-qualified domain name.",
					"serverMissing": "Please enter Mender server URL.",
					"tenantTokenMissing": "Please enter Tenant token.",
					"updatePollIntervalInvalid": "Update check interval should be an integer greater or equal to 0.",
					"updatePollIntervalMissing": "Please enter update check interval."
				}
			},
			"monit": {
				"checks": {
					"name": "Check name",
					"noRecords": "No checks detected.",
					"title": "System checks"
				},
				"messages": {
					"save": {
						"success": "Monit configuration has been successfully saved."
					}
				},
				"mmonit": {
					"enable": "Enable M/Monit server connection",
					"server": "M/Monit server URL",
					"title": "M/Monit connection"
				},
				"validation": {
					"serverInvalid": "M/Monit server URL should be IPv4, IPv6, localhost or fully-qualified domain name.",
					"serverMissing": "Please enter M/Monit server URL."
				}
			},
			"profiles": {
				"actions": {
					"add": "Add device profile",
					"apply": "Apply device profile",
					"delete": "Delete device profile",
					"edit": "Edit device profile"
				},
				"delete": {
					"prompt": "Are you sure you want to delete device configuration profile {name}?",
					"title": "Device configuration profile delete confirmation"
				},
				"deviceType": "Device type",
				"deviceTypes": {
					"adapter": "Adapter",
					"board": "Board"
				},
				"id": "Profile ID",
				"messages": {
					"delete": {
						"success": "Device configuration profile {name} successfully deleted."
					},
					"save": {
						"success": "Device configuration profile {name} successfully saved."
					}
				},
				"name": "Profile name",
				"profileType": "Profile type",
				"profileTypes": {
					"spi": "SPI",
					"uart": "UART"
				},
				"title": "Device profiles",
				"validation": {
					"nameMissing": "Please enter device profile name."
				}
			},
			"smtp": {
				"defaultConfig": "The default configuration for IQAROS system is currently in use.",
				"errors": {
					"host": "Please enter server address.",
					"hostInvalid": "Server address should be an IP address, fully-qualified domain name or localhost.",
					"password": "Please enter password.",
					"port": "Please enter port number.",
					"portInvalid": "Port number should be an integer between 1 and 65535.",
					"sender": "Please enter sender email.",
					"username": "Please enter username."
				},
				"form": {
					"customConfig": "Use the custom mail server configuration",
					"enabled": "Enable sending e-mails",
					"host": "Server address",
					"password": "Password",
					"port": "Port",
					"security": "Connection security",
					"securityLevels": {
						"none": "None",
						"ssl": "TLS",
						"tls": "StartTLS"
					},
					"sender": "Sender",
					"test": "Test configuration",
					"title": "Mail server configuration",
					"username": "Username"
				},
				"messages": {
					"fetchFailed": "Failed to retrieve mail server configuration: {error}",
					"saveFailed": "Failed to save mail server configuration: {error}",
					"saveSuccess": "Mail server configuration has been successfully saved.",
					"testFailed": "Failed to send mail server configuration test email: {error}",
					"testSuccess": "Mail server configuration test email has been successfully sent."
				}
			},
			"time": {
				"datetime": "Date and time",
				"gatewayDateTime": "Gateway date and time: ",
				"messages": {
					"save": {
						"success": "Time and NTP configuration successfully saved."
					}
				},
				"ntpServers": {
					"add": "Add NTP server",
					"address": "NTP server address",
					"delete": "Delete NTP server",
					"deleteAll": "Delete all NTP servers",
					"edit": "Edit NTP server",
					"noRecords": "No custom NTP server defined. Default NTP servers will be used for time synchronization.",
					"title": "NTP servers",
					"validation": {
						"serverInvalid": "NTP server address should be a valid IP or fully qualified domain name.",
						"serverMissing": "Please enter NTP server address."
					}
				},
				"ntpSync": "Synchronize time automatically",
				"timezone": "Time zone"
			},
			"unattendedUpgrades": {
				"interval": "Day(s)",
				"notes": {
					"packageListUpdateInterval": "Set value 0 to disable automatic package list updates.",
					"packageRemovalInterval": "Set value 0 to disable automatic package removal.",
					"packageUpdateInterval": "Set value 0 to disable automatic package updates."
				},
				"packageListUpdateInterval": "Package list update interval",
				"packageRemovalInterval": "Unnecessary package removal interval",
				"packageUpdateInterval": "Package update interval",
				"rebootOnKernelUpdate": "Reboot on kernel update",
				"validation": {
					"packageListUpdateIntervalInvalid": "Package list update interval should be an integer greater or equal to 0.",
					"packageListUpdateIntervalMissing": "Please enter package list update interval.",
					"packageRemovalIntervalInvalid": "Package removal interval should be an integer greater or equal to 0.",
					"packageRemovalIntervalMissing": "Please enter package removal interval.",
					"packageUpdateIntervalInvalid": "Package update interval should be an integer greater or equal to 0.",
					"packageUpdateIntervalMissing": "Please enter package update interval."
				}
			}
		},
		"dev": {
			"openApi": {
				"messages": {
					"fetchFailed": "An error occurred during OpenAPI specification loading."
				},
				"title": "OpenAPI specification"
			}
		},
		"errors": {
			"403": {
				"header": "Error 403",
				"text": "You do not have permission to view this page. Please try contact the web site administrator if you believe you should be able to view this page.",
				"title": "Access denied"
			},
			"404": {
				"header": "Error 404",
				"text": "The page you requested could not be found. The address may be incorrect, or the page no longer exists.",
				"title": "Page not found"
			}
		},
		"gateway": {
			"information": {
				"addresses": {
					"ip": "IP addresses",
					"mac": "MAC addresses"
				},
				"board": "Board",
				"diagnostics": "Download diagnostics",
				"gwId": "IQRF Gateway ID",
				"gwImage": "IQRF Gateway Image",
				"gwMode": "Daemon mode",
				"hostname": "Hostname",
				"hostnameChange": {
					"messages": {
						"daemonRestart": "IQRF Gateway Daemon restart is required to apply the changes.",
						"save": {
							"success": "Hostname has been successfully changed."
						}
					},
					"setIdeHostname": "Set hostname as IQRF IDE GW hostname",
					"setSplitterId": "Set hostname as IQRF Gateway Daemon instance ID",
					"title": "Change hostname",
					"validation": {
						"hostname": "Please enter hostname."
					}
				},
				"os": "Operating system",
				"tr": {
					"dpa": "DPA",
					"error": "Cannot get information about the Coordinator.",
					"hwpid": "HWPID",
					"hwpidVersion": "HWPID ver.",
					"mcuType": "MCU type",
					"moduleId": "MID",
					"moduleType": "Module type",
					"os": "OS",
					"title": "TR info",
					"voltage": "Supply voltage"
				},
				"uptime": "Uptime",
				"usages": {
					"disks": "Disk usages",
					"memory": "Memory usage",
					"swap": "Swap usage",
					"used": "Used"
				},
				"version": {
					"iqrfCloudProvisioning": "IQRF Cloud Provisioning",
					"iqrfGatewayController": "IQRF Gateway Controller",
					"iqrfGatewayDaemon": "IQRF Gateway Daemon",
					"iqrfGatewayInfluxdbBridge": "IQRF Gateway InfluxDB Bridge",
					"iqrfGatewaySetter": "IQRF Gateway Setter",
					"iqrfGatewayUploader": "IQRF Gateway Uploader",
					"iqrfGatewayWebapp": "IQRF Gateway Webapp"
				}
			},
			"logs": {
				"journal": {
					"oldestRecords": "No older Journal records available."
				}
			},
			"mode": {
				"current": "Current mode",
				"messages": {
					"setFailed": "Mode change request failed.",
					"setSuccess": "Mode successfully changed to {mode}.",
					"setTimeout": "Mode change request timed out."
				},
				"modes": {
					"forwarding": "Forwarding mode",
					"operational": "Operational mode",
					"service": "Service mode",
					"unknown": "Unknown"
				},
				"startup": "Startup mode"
			},
			"power": {
				"powerOff": {
					"action": "Power off",
					"messages": {
						"failed": "Failed to schedule gateway power off.",
						"success": "Your device will be powered off at {time}."
					},
					"prompt": "The gateway will power off within 60 seconds.",
					"title": "Power off confirmation"
				},
				"reboot": {
					"action": "Reboot",
					"messages": {
						"failed": "Failed to schedule gateway reboot.",
						"success": "Your device will be rebooted at {time}, the reboot may take tens of seconds."
					},
					"prompt": "The gateway will reboot within 60 seconds.",
					"title": "Reboot confirmation"
				},
				"stats": {
					"columns": {
						"downtime": "Downtime",
						"graceful": "Graceful shutdown",
						"shutdown": "Shutdown time",
						"start": "Startup time",
						"uptime": "Uptime"
					},
					"messages": {
						"fetchFailed": "Failed to retrieve power statistics.",
						"tuptimeMissing": "Tuptime utility is not installed. Please install it to see power statistics."
					},
					"title": "Power statistics"
				}
			},
			"services": {
				"actions": {
					"disable": "Disable service",
					"enable": "Enable service",
					"refresh": "Refresh service",
					"refreshAll": "Refresh services",
					"restart": "Restart service",
					"start": "Start service",
					"status": "Toggle status",
					"stop": "Stop service"
				},
				"service": {
					"ModemManager": {
						"description": "Modem Manager is used to manage GSM modems.",
						"name": "Modem Manager"
					},
					"apcupsd": {
						"description": "",
						"name": "APC UPS Daemon"
					},
					"iqrf-cloud-provisioning": {
						"description": "Provisioning tool for IQRF Cloud.",
						"name": "IQRF Cloud Provisioning."
					},
					"iqrf-gateway-controller": {
						"description": "",
						"name": "IQRF Gateway Controller"
					},
					"iqrf-gateway-daemon": {
						"description": "IQRF Gateway Daemon is a core component of the IQRF Gateway.",
						"name": "IQRF Gateway Daemon"
					},
					"iqrf-gateway-influxdb-bridge": {
						"description": "Stores sensor measurement data in InfluxDB.",
						"name": "IQRF Gateway InfluxDB Bridge"
					},
					"iqrf-gateway-translator": {
						"description": "",
						"name": "IQRF Gateway Translator"
					},
					"mender-client": {
						"description": "Mender is an over-the-air update manager for IoT and embedded devices.",
						"name": "Mender"
					},
					"monit": {
						"description": "Monit is a utility for management and monitoring of Unix systems.",
						"name": "Monit"
					},
					"nodered": {
						"description": "",
						"name": "Node-RED"
					},
					"ssh": {
						"description": "SSH daemon is used to access the device via SSH protocol.",
						"name": "SSH daemon"
					},
					"systemd-journald": {
						"description": "Systemd Journal collects and stores logging data from services and processes.",
						"name": "Systemd Journal"
					},
					"systemd-timesyncd": {
						"description": "",
						"name": "Systemd Time Sync Service"
					},
					"unattended-upgrades": {
						"description": "Unattended upgrades is a service used to keep device software up-to-date automatically.",
						"name": "Unattended Upgrades"
					}
				},
				"table": {
					"service": "Service"
				}
			}
		},
		"install": {
			"checks": {
				"loading": "IQRF Gateway Webapp is loading…",
				"messages": {
					"failed": "Failed to load IQRF Gateway Webapp. Please try to reload the page."
				}
			},
			"errors": {
				"misconfiguredSudo": {
					"fixes": {
						"invalid": "Allow user {user} to execute commands with sudo using the following commands:",
						"missing": "Enter interactive shell as root and install sudo utility using the following commands:"
					},
					"texts": {
						"invalid": "IQRF Gateway Webapp detected an invalid sudo configuration on your system so some commands cannot be executed.",
						"missing": "IQRF Gateway Webapp did not detect the sudo command on your system which requires it to run properly."
					},
					"title": "Misconfigured sudo"
				},
				"missingDependencies": {
					"command": "Missing command",
					"package": "Package",
					"text": "IQRF Gateway Webapp detected the following missing dependencies: {dependencies}.",
					"title": "Missing dependencies"
				},
				"missingMigrations": {
					"fix": "To fix it, run the following command in terminal:",
					"text": "IQRF Gateway Webapp detected missing database migrations.",
					"title": "Missing database migration"
				},
				"missingPhpExtensions": {
					"fix": "Run the following commands in terminal to install missing extensions:",
					"text": "IQRF Gateway Webapp detected the following missing PHP extensions: {extensions}.",
					"title": "Missing PHP extensions"
				}
			},
			"wizard": {
				"adminUserCreation": {
					"button": "Create user",
					"text": "Create a new user to access web interface of IQRF gateway and configure it.",
					"title": "Create a new user"
				},
				"adminUserPreferences": {
					"title": "Set your preferences"
				},
				"dateTimeConfiguration": {
					"text": "Configure date, time and timezone settings for your IQRF gatewaym.",
					"title": "Date and time configuration"
				},
				"installationCompleted": {
					"button": "Go to the application",
					"text": "Congratulations, you have finished setting up your new IQRF gateway.",
					"title": "Installation completed"
				},
				"mailServerConfiguration": {
					"text": "Configure a mail server to send emails.",
					"title": "Mail server configuration"
				},
				"sshServerConfiguration": {
					"messages": {
						"fetchFailed": "Failed to retrieve SSH server service state.",
						"saveFailed": "Failed to save SSH server service state."
					},
					"service": {
						"disable": "Do not start SSH service.",
						"enable": "Start SSH service on every boot.",
						"start": "Start SSH service now, once."
					},
					"text": "Configure SSH server to access terminal of your IQRF gateway via SSH protocol.",
					"title": "SSH server configuration"
				}
			}
		},
		"ipNetwork": {
			"connections": {
				"actions": {
					"add": "Create a new connection",
					"connect": "Connect connection",
					"delete": "Delete connection",
					"disconnect": "Disconnect connection",
					"edit": "Edit connection",
					"saveAndConnect": "Save and connect"
				},
				"add": {
					"messages": {
						"failure": "Failed to create network connection {name}.",
						"success": "Network connection {name} has been successfully created."
					},
					"titles": {
						"802-11-wireless": "Create a new WiFi connection",
						"802-3-ethernet": "Create a new Ethernet connection",
						"gsm": "Create a new mobile connection",
						"vlan": "Create a new VLAN connection"
					}
				},
				"columns": {
					"interfaceName": "Interface name",
					"name": "Connection name",
					"state": "State",
					"states": {
						"activated": "Activated",
						"activating": "Activating",
						"deactivated": "Deactivated",
						"deactivating": "Deactivating",
						"unknown": "Unknown"
					}
				},
				"connect": {
					"messages": {
						"failure": "Failed to connect network connection {name}.",
						"success": "Network connection {name} has been successfully connected."
					}
				},
				"delete": {
					"messages": {
						"failure": "Failed to delete network connection {name}.",
						"success": "Network connection {name} has been successfully deleted."
					},
					"prompt": "If you're accessing the web interface from address used by this network connection profile, deleting it will result in web interface no longer being available at this address. Are you sure you want to delete network connection {name}?",
					"title": "Network connection deletion confirmation"
				},
				"disconnect": {
					"messages": {
						"failure": "Failed to disconnect network connection {name}.",
						"success": "Network connection {name} has been successfully disconnected."
					},
					"prompt": "If you're accessing the web interface from address used by this network connection profile, disconnect it will result in web interface no longer being available at this address. Are you sure you want to disconnect network connection {name}?",
					"title": "Network connection disconnection confirmation"
				},
				"edit": {
					"messages": {
						"failure": "Failed to update network connection {name}.",
						"success": "Network connection {name} has been successfully updated."
					},
					"title": "Edit connection configuration",
					"titles": {
						"802-11-wireless": "Edit WiFi connection",
						"802-3-ethernet": "Edit Ethernet connection",
						"gsm": "Edit mobile connection",
						"vlan": "Edit VLAN connection"
					}
				},
				"errors": {
					"generic": {
						"interface": {
							"required": "Please select the network interface."
						},
						"name": {
							"required": "Please enter the connection name."
						}
					},
					"gsm": {
						"apn": {
							"apn": "Please enter a valid APN.",
							"required": "Please enter the APN."
						},
						"password": {
							"required": "Please enter the password."
						},
						"pin": {
							"pin": "PIN code must be a numerical value with 4-8 digits.",
							"required": "Please enter the PIN code."
						},
						"username": {
							"required": "Please enter the username."
						}
					},
					"ip": {
						"disabledBothIpStacks": "Current IP configuration cannot be set because both IP stacks are disabled."
					},
					"ipv4": {
						"address": {
							"ipv4Address": "Please enter a valid IPv4 address.",
							"ipv4Subnet": "IPv4 address and IPv4 gateway address must be in the same subnet.",
							"required": "Please enter the IPv4 address."
						},
						"dns": {
							"ipv4Address": "Please enter a valid IPv4 DNS server address.",
							"required": "Please enter the IPv4 DNS server address."
						},
						"gateway": {
							"ipv4Address": "Please enter a valid IPv4 gateway address.",
							"ipv4Subnet": "IPv4 address and IPv4 gateway address must be in the same subnet.",
							"required": "Please enter the IPv4 gateway address."
						},
						"mask": {
							"ipv4Address": "Please enter a valid IPv4 subnet mask.",
							"required": "Please enter the IPv4 subnet mask."
						},
						"method": {
							"required": "Please select the IPv4 configuration method."
						},
						"prefix": {
							"between": "IPv4 subnet prefix should be an integer between 0 and 32.",
							"required": "Please enter the IPv4 subnet prefix."
						}
					},
					"ipv6": {
						"address": {
							"ipv6Address": "Please enter a valid IPv6 address.",
							"ipv6Subnet": "IPv6 address and IPv6 gateway address must be in the same subnet.",
							"required": "Please enter the IPv6 address."
						},
						"dns": {
							"ipv6Address": "Please enter a valid IPv6 DNS server address.",
							"required": "Please enter the IPv6 DNS server address."
						},
						"gateway": {
							"ipv6Address": "Please enter a valid IPv6 gateway address.",
							"ipv6Subnet": "IPv6 address and IPv6 gateway address must be in the same subnet.",
							"required": "Please enter the IPv6 gateway address."
						},
						"method": {
							"required": "Please select the IPv6 configuration method."
						},
						"prefix": {
							"between": "IPv6 subnet prefix should be an integer between 0 and 128.",
							"required": "Please enter the IPv6 subnet prefix."
						}
					},
					"serial": {
						"baudRate": {
							"numerical": "Baud rate must be a numerical value.",
							"required": "Please enter the baud rate."
						}
					},
					"vlan": {
						"id": {
							"invalid": "VLAN ID must be a numerical value between 1 and 4094.",
							"required": "Please enter the VLAN ID."
						}
					},
					"wifi": {
						"security": {
							"psk": {
								"required": "Please enter the pre-shared key."
							},
							"type": {
								"required": "Please select the security type."
							}
						},
						"ssid": {
							"required": "Please enter the SSID of WiFi Access Point."
						}
					}
				},
				"form": {
					"autoConnect": {
						"enabled": "Establish connection automatically"
					},
					"eap": {
						"anonymousIdentity": "Anonymous identity",
						"cert": "CA certificate",
						"identity": "Identity",
						"password": "Password",
						"phaseOneMethod": "Phase 1 authentication method",
						"phaseOneMethods": {
							"fast": "FAST",
							"leap": "LEAP",
							"md5": "MD5",
							"null": "Please select Phase 1 authentication method",
							"peap": "PEAP",
							"pwd": "Password",
							"tls": "TLS",
							"ttls": "TTLS"
						},
						"phaseTwoMethod": "Phase 2 authentication method",
						"phaseTwoMethods": {
							"gtc": "GTC",
							"md5": "MD5",
							"mschapv2": "MSCHAPv2",
							"null": "Please select Phase 2 authentication method"
						}
					},
					"generic": {
						"interface": "Network interface",
						"name": "Connection name"
					},
					"gsm": {
						"apn": "Access point name",
						"password": "Password",
						"pin": "PIN code",
						"title": "Mobile connection configuration",
						"username": "Username"
					},
					"ip": {
						"title": "IP configuration"
					},
					"ipv4": {
						"address": "IPv4 address",
						"dns": {
							"address": "DNS server IPv4 address",
							"title": "IPv4 DNS servers"
						},
						"gateway": "IPv4 gateway address",
						"mask": "IPv4 subnet mask",
						"method": "IPv4 configuration method",
						"methods": {
							"auto": "Automatic (DHCP)",
							"disabled": "Disabled",
							"link-local": "Link-local",
							"manual": "Static",
							"null": "Please select IPv4 configuration method",
							"shared": "Shared with other computers"
						},
						"prefix": "IPv4 subnet prefix",
						"title": "IPv4 configuration"
					},
					"ipv6": {
						"address": "IPv6 address",
						"dns": {
							"address": "DNS server IPv6 address",
							"title": "IPv6 DNS servers"
						},
						"gateway": "IPv6 gateway address",
						"method": "IPv6 configuration method",
						"methods": {
							"auto": "Automatic (SLAAC)",
							"dhcp": "Automatic (DHCPv6 only)",
							"disabled": "Disabled",
							"ignore": "Ignore",
							"link-local": "Link-local",
							"manual": "Static",
							"null": "Please select IPv6 configuration method",
							"shared": "Shared with other computers"
						},
						"prefix": "IPv6 subnet prefix",
						"title": "IPv6 configuration"
					},
					"serial": {
						"baudRate": "Baud rate",
						"title": "Serial link configuration"
					},
					"vlan": {
						"id": "VLAN ID",
						"title": "VLAN configuration"
					},
					"wifi": {
						"security": {
							"leap": {
								"password": "Password",
								"username": "Username"
							},
							"psk": "Pre-shared key",
							"type": "Security type",
							"types": {
								"leap": "Cisco LEAP (Lightweight Extensible Authentication Protocol)",
								"null": "Please select security type",
								"open": "Open network",
								"wep": "WEP",
								"wpa-eap": "WPA-Enterprise",
								"wpa-psk": "WPA-Personal"
							},
							"wep": {
								"index": "Default WEP key",
								"keyNum": "WEP Key {index}",
								"length": "WEP key length",
								"lengths": {
									"128bit": "128 bit (13 ASCII / 26 hex)",
									"64bit": "64 bit (5 ASCII / 10 hex)",
									"null": "Please select WEP key length"
								},
								"type": "Type",
								"types": {
									"key": "Key",
									"null": "Please select WEP key type",
									"passphrase": "Passphrase"
								}
							}
						},
						"ssid": "SSID",
						"title": "WiFi connection configuration"
					}
				},
				"titles": {
					"802-11-wireless": "WiFi connections",
					"802-3-ethernet": "Ethernet connections",
					"gsm": "Mobile connections",
					"vlan": "VLAN connections"
				}
			},
			"interfaces": {
				"columns": {
					"macAddress": "MAC address",
					"manufacturer": "Manufacturer",
					"model": "Model",
					"name": "Name",
					"state": "State",
					"states": {
						"connected": "Connected",
						"connecting": "Connecting",
						"connecting (checking IP connectivity)": "Checking IP connectivity",
						"connecting (configuring)": "Configuring",
						"connecting (getting IP configuration)": "Getting IP configuration",
						"connecting (need authentication)": "Need authentication",
						"connecting (prepare)": "Prepare",
						"connecting (starting secondary connections)": "Starting secondary connections",
						"connection failed": "Failed",
						"deactivating": "Deactivating",
						"disconnected": "Disconnected",
						"unavailable": "Unavailable",
						"unknown": "Unknown",
						"unmanaged": "Unmanaged"
					}
				},
				"titles": {
					"ethernet": "Ethernet interfaces",
					"vlan": "VLAN interfaces",
					"wifi": "WiFi interfaces"
				}
			},
			"modems": {
				"actions": {
					"scan": "Scan for modems"
				},
				"columns": {
					"failedReasons": {
						"esim-without-profiles": "eSIM without profiles",
						"none": "No error",
						"sim-error": "SIM card unusable",
						"sim-missing": "SIM card missing",
						"unknown": "Unknown error",
						"unknown-capabilities": "Unknown capabilities"
					},
					"imei": "IMEI",
					"interface": "Interface name",
					"manufacturer": "Manufacturer",
					"model": "Model",
					"rssi": "RSSI",
					"signal": "Signal strength",
					"state": "State",
					"states": {
						"connected": "Connected",
						"connecting": "Connecting",
						"disabled": "Disabled",
						"disabling": "Disabling",
						"disconnecting": "Disconnecting",
						"enabled": "Enabled",
						"enabling": "Enabling",
						"failed": "Modem is unusable",
						"initializing": "Initializing",
						"locked": "Locked",
						"registered": "Registered to network",
						"searching": "Searching network",
						"unknown": "Unknown"
					}
				},
				"title": "Modems"
			},
			"wireGuard": {
				"tunnels": {
					"columns": {
						"action": {
							"activate": "Activate",
							"deactivate": "Deactivate"
						},
						"active": "Active",
						"enabled": "Enabled",
						"name": "Name"
					},
					"delete": {
						"messages": {
							"failure": "Failed to delete WireGuard tunnel {name}.",
							"success": "WireGuard tunnel {name} has been successfully deleted."
						},
						"prompt": "Are you sure you want to delete WireGuard tunnel {name}?",
						"title": "WireGuard tunnel deletion confirmation"
					},
					"title": "WireGuard tunnels"
				}
			}
		},
		"iqrfnet": {
			"common": {
				"dpa": "DPA",
				"embedPeripherals": "Embedded Peripherals",
				"os": "OS",
				"peripherals": {
					"coordinator": "Coordinator",
					"eeeprom": "EEEPROM",
					"eeprom": "EEPROM",
					"externalEeprom": "External EEPROM",
					"io": "IO",
					"ledg": "LEDG",
					"ledr": "LEDR",
					"node": "Node",
					"os": "OS",
					"ram": "RAM",
					"spi": "SPI",
					"thermometer": "Thermometer",
					"uart": "UART"
				},
				"rf": "RF",
				"rfpgm": "RFPGM",
				"rxFilter": "RX filter",
				"trPeripherals": "TR Peripherals",
				"txPower": "TX power"
			},
			"inProgress": "Request handling in progress.",
			"products": {
				"button": "Browse products",
				"hwpid": "Product HWPID",
				"manufacturer": "Manufacturer",
				"name": "Product name",
				"title": "Product browser"
			},
			"send-dpa": {
				"customTimeout": "Custom DPA timeout",
				"decimal": "Change to decimal",
				"hexadecimal": "Change to hexadecimal",
				"history": {
					"confirmation": "Confirmation",
					"time": "Time",
					"title": "Packet history"
				},
				"hwpid": "HWPID",
				"lock": "Lock NADR",
				"macros": {
					"title": "Macros"
				},
				"nadr": "NADR",
				"pcmd": "PCMD",
				"pdata": "PDATA",
				"pnum": "PNUM",
				"presets": "Presets",
				"unlock": "Unlock NADR",
				"useCustomTimeout": "Use custom DPA timeout",
				"validation": {
					"hwpidHexInvalid": "Hexadecimal HWPID should be a 4 characters long string between 0000 and ffff.",
					"hwpidHexMissing": "Please enter hexadecimal HWPID.",
					"hwpidInvalid": "Decimal HWPID should be an integer between 0 and 65535.",
					"hwpidMissing": "Please enter decimal HWPID.",
					"nadrHexInvalid": "Hexadecimal NADR should be a 2 characters long string between 00 and ff.",
					"nadrHexMissing": "Please enter hexadecimal NADR.",
					"nadrInvalid": "Decimal NADR should be an integer between 0 and 255.",
					"nadrMissing": "Please enter decimal NADR.",
					"pcmdHexInvalid": "Hexadecimal PCMD should be a 2 characters long string between 00 and 7f.",
					"pcmdHexMissing": "Please enter hexadecimal PCMD.",
					"pcmdInvalid": "Decimal PCMD should be an integer between 0 and 127.",
					"pcmdMissing": "Please enter decimal PCMD.",
					"pdataInvalid": "PDATA should be at most 57 hexadecimal bytes separated by a dot.",
					"pnumHexInvalid": "Hexadecimal PNUM should be a 2 characters long string between 00 and ff.",
					"pnumHexMissing": "Please enter hexadecimal PNUM.",
					"pnumInvalid": "Decimal PNUM should be an integer between 0 and 255.",
					"pnumMissing": "Please enter decimal PNUM."
				}
			},
			"send-json": {
				"api": "API documentation",
				"history": {
					"noMessages": "No recorded JSON messages.",
					"title": "Request history"
				},
				"json": "Request message"
			},
			"tr-config": {
				"dpa": {
					"other": {
						"autoexec": "Autoexec",
						"baudRate": "UART interface baud rate",
						"customDpaHandler": "Custom DPA Handler",
						"dp2p": "DPA Peer-to-Peer",
						"ioSetup": "IO Setup",
						"localFrc": "Local FRC",
						"neverSleep": "Stay awake when not bonded",
						"routingOff": "Routing off",
						"up2p": "User Peer-to-Peer"
					},
					"rf": {
						"altDsmChannel": "Alternative DSM channel",
						"lpRxTimeout": "LP RX timeout",
						"networkType": "Network type",
						"networkTypes": {
							"std": "STD",
							"stdLp": "STD+LP"
						}
					}
				},
				"os": {
					"rf": {
						"rfBand": "RF band",
						"rfChannelA": "RF channel A",
						"rfChannelB": "RF channel B"
					},
					"rfpgm": {
						"dualChannel": "Dual channel",
						"enableAfterReset": "Enable after reset",
						"incorrectUpload": "Incorrect upload",
						"lpMode": "LP mode",
						"terminateAfterMin": "Terminate after ~1 minute",
						"terminateByMcuPin": "Terminate by MCU pin"
					}
				},
				"security": {
					"accessPassword": "Access password",
					"allowedCharactersAscii": "Allowed characters: Digits and letters, \"#$%&()*+,-./:;?{'@'}[\\]^_`{'{'}{'}'}~ and space.",
					"allowedCharactersHex": "Allowed characters: Digits and letters a-f.",
					"ascii": "ASCII",
					"asciiChange": "Change to ASCII",
					"empty": "Blank field sets default value.",
					"errors": {
						"accessPasswordInvalidAsciiChar": "ASCII access password contains invalid characters.",
						"accessPasswordInvalidAsciiLen": "ASCII access password should be 0-16 characters long.",
						"accessPasswordInvalidHexChar": "Hexadecimal access password contains invalid characters.",
						"accessPasswordInvalidHexLen": "Hexadecimal access password should be 0-32 characters long.",
						"userKeyInvalidAsciiChar": "ASCII user key contains invalid characters.",
						"userKeyInvalidAsciiLen": "ASCII user key should be 0-16 characters long.",
						"userKeyInvalidHexChar": "Hexadecimal user key contains invalid characters.",
						"userKeyInvalidHexLen": "Hexadecimal user key should be 0-32 characters long."
					},
					"hex": "HEX",
					"hexChange": "Change to HEX",
					"messages": {
						"asciiToHexConversionInvalid": "ASCII value contained disallowed characters during conversion, input cleared.",
						"hexToAsciiConversionInvalid": "Hexadecimal value contained disallowed ASCII characters during conversion, input cleared."
					},
					"title": "Security",
					"userKey": "User key"
				}
			},
			"upload": {
				"dpa-handler": {
					"file": "Hex file to upload",
					"messages": {
						"success": "Custom DPA handler has been successfully uploaded."
					},
					"title": "Custom DPA handler",
					"validation": {
						"fileMissing": "Please select custom DPA handler hex file."
					}
				}
			}
		},
		"layout": {
			"themeSwitch": {
				"title": "Switch theme"
			}
		},
		"maintenance": {
			"backup": {
				"backup": {
					"item": "Software and system configuration",
					"software": {
						"iqrf": "IQRF Gateway Software",
						"mender": "Mender",
						"monit": "Monit"
					},
					"system": {
						"hostname": "Hostname",
						"journal": "Journal",
						"network": "Network manager",
						"time": "Time synchronization"
					},
					"title": "Gateway backup"
				},
				"restore": {
					"archive": "Backup archive",
					"messages": {
						"save": {
							"success": "Gateway successfully restored from backup archive and will reboot at {time}."
						}
					},
					"title": "Gateway restore",
					"validation": {
						"archiveMissing": "Please select gateway backup archive."
					}
				}
			},
			"mender": {
				"remount": {
					"messages": {
						"success": "Filesystem has been successfully re-mounted."
					},
					"readonly": "Read-only",
					"readwrite": "Read-write",
					"title": "Re-mount filesystem"
				},
				"update": {
					"artifact": "Mender artifact",
					"commit": "Commit update",
					"install": "Install artifact",
					"log": {
						"button": "Show log",
						"title": "Mender log"
					},
					"messages": {
						"commit": {
							"success": "Update has been successfully committed."
						},
						"install": {
							"success": "Mender artifact update has been successfully installed."
						},
						"rollback": {
							"success": "Update has been successfully rolled back."
						}
					},
					"rollback": "Rollback update",
					"validations": {
						"artifact": {
							"required": "Please select mender artifact file."
						}
					}
				}
			}
		},
		"status": {
			"monitor": {
				"enumeration": {
					"notRunning": "Enumeration not running.",
					"running": "Enumeration in progress.",
					"unavailable": "Enumeration status not available."
				},
				"mode": "Daemon mode",
				"modes": {
					"forwarding": "Forwarding",
					"operational": "Operational",
					"service": "Service",
					"unknown": "Unknown"
				},
				"notified": "Last notified",
				"queue": "Queue length",
				"version": "Daemon version"
			},
			"sessionExpiration": {
				"failed": "Failed to renew session.",
				"indicator": "Session will expire in: ",
				"prompt": "Your session is about to expire and you will be logged out. Click the renew session button to renew the session and dismiss this windows.",
				"renew": "Renew session",
				"success": "Your session has been successfully renewed.",
				"title": "Session expiration warning"
			}
		}
	},
	"pages": {
		"accessControl": {
			"apiKeys": {
				"description": "Manage API keys.",
				"title": "API keys"
			},
			"description": "Manage access via users, API or SSH keys.",
			"sshKeys": {
				"description": "Manage SSH keys.",
				"title": "SSH keys"
			},
			"title": "Access control",
			"users": {
				"description": "Manager Webapp users.",
				"title": "Users"
			}
		},
		"account": {
			"recovery": {
				"title": "Account recovery"
			}
		},
		"auth": {
			"sign": {
				"in": {
					"title": "Sign in"
				}
			}
		},
		"config": {
			"controller": {
				"description": "Configure IQRF Gateway Controller.",
				"settings": {
					"description": "Update IQRF Gateway Controller settings.",
					"title": "Settings"
				},
				"title": "IQRF GW Controller"
			},
			"daemon": {
				"connections": {
					"description": "Configure WebSocket, MQTT, MQ and UDP connections.",
					"mqtt": {
						"description": "Configure MQTT connections.",
						"title": "MQTT"
					},
					"title": "Connections",
					"udp": {
						"description": "Configure UDP connections.",
						"title": "UDP"
					},
					"ws": {
						"description": "Configure WebSocket connections.",
						"title": "WebSocket"
					}
				},
				"db": {
					"description": "Configure device database.",
					"title": "Device database"
				},
				"description": "Configure IQRF Gateway Daemon.",
				"interfaces": {
					"cdc": {
						"description": "Configure USB CDC interface.",
						"title": "USB CDC"
					},
					"description": "Configure IQRF communication interfaces.",
					"dpa": {
						"description": "Configure DPA channel and active IQRF interface.",
						"title": "DPA"
					},
					"spi": {
						"description": "Configure SPI interface.",
						"title": "SPI"
					},
					"title": "Interfaces",
					"uart": {
						"description": "Configure UART interface.",
						"title": "UART"
					}
				},
				"json-api": {
					"description": "Configure JSON API.",
					"title": "JSON API"
				},
				"logging": {
					"description": "Configure logging service.",
					"title": "Logging"
				},
				"repository": {
					"description": "Configure IQRF repository.",
					"title": "IQRF Repository"
				},
				"scheduler": {
					"description": "Manage scheduler tasks.",
					"title": "Scheduler"
				},
				"title": "IQRF GW Daemon"
			},
			"description": "Configure gateway, IQRF software and other services.",
			"influxdb-bridge": {
				"description": "Configure IQRF Gateway InfluxDB Bridge.",
				"title": "IQRF GW InfluxDB Bridge"
			},
			"journal": {
				"description": "Configure systemd Journal logging.",
				"title": "Journal"
			},
			"mender": {
				"description": "Configure Mender client for remote and features.",
				"title": "Mender"
			},
			"monit": {
				"description": "Configure Monit client and system health checks.",
				"title": "Monit"
			},
			"smtp": {
				"description": "Configure SMTP server.",
				"title": "SMTP"
			},
			"time": {
				"description": "Configure time, timezone and NTP synchronization.",
				"title": "Time"
			},
			"title": "Configuration",
			"unattendedUpgrades": {
				"description": "Configure automatic unattended upgrades service.",
				"title": "Automatic upgrades"
			}
		},
		"dev": {
			"description": "Development tools and utilities.",
			"openApi": {
				"description": "Opens OpenAPI specification of REST API.",
				"title": "OpenAPI specification"
			},
			"title": "Development tools"
		},
		"docs": {
			"description": "Opens documentation in a new tab.",
			"title": "Documentation"
		},
		"gateway": {
			"description": "Display gateway information, services and power controls.",
			"information": {
				"description": "Information about this gateway.",
				"title": "Information"
			},
			"logs": {
				"description": "Display gateway logs.",
				"title": "Logs"
			},
			"mode": {
				"description": "Change gateway mode.",
				"title": "Mode"
			},
			"power": {
				"description": "Powers off or reboots this gateway.",
				"title": "Power control"
			},
			"services": {
				"description": "Control services and display their status.",
				"title": "Services"
			},
			"title": "Gateway"
		},
		"install": {
			"errors": {
				"messages": {
					"reload": {
						"failed": "Failed to reload installation check.",
						"success": "Installation check has been successfully reloaded.",
						"successNoErrors": "Installation check has been successfully reloaded. No more"
					}
				},
				"text": "IQRF Gateway Webapp detected the following problems with the installation. Please resolve them before continuing using the app.",
				"title": "Installation errors"
			},
			"smtp": {
				"title": "Configure SMTP server"
			},
			"sshKeys": {
				"title": "Add SSH keys"
			},
			"sshService": {
				"title": "SSH service"
			},
			"title": "Installation wizard",
			"user": {
				"title": "Create a new user"
			},
			"wizard": {
				"text": "Welcome to your new IQRF gateway.",
				"title": "IQRF Gateway installation wizard"
			}
		},
		"ipNetwork": {
			"description": "IP network management.",
			"ethernet": {
				"description": "Ethernet connections management.",
				"edit": {
					"title": "Edit Ethernet connection"
				},
				"title": "Ethernet connections"
			},
			"mobile": {
				"description": "Mobile connections management.",
				"title": "Mobile connections"
			},
			"title": "IP network",
			"vlan": {
				"description": "VLAN connections management.",
				"edit": {
					"title": "Edit VLAN connection"
				},
				"title": "VLAN connections"
			},
			"wireGuard": {
				"description": "WireGuard VPN management.",
				"title": "WireGuard VPN"
			},
			"wireless": {
				"description": "Wireless connections management.",
				"edit": {
					"title": "Edit Wireless connection"
				},
				"title": "Wireless connections"
			}
		},
		"iqrfnet": {
			"description": "Manager IQRF network and devices.",
			"send-dpa": {
				"description": "Send raw DPA packets into the IQRF network.",
				"title": "Send DPA packet"
			},
			"send-json": {
				"description": "Send JSON requests into the IQRF network.",
				"title": "Send JSON request"
			},
			"title": "IQRF Network",
			"tr-config": {
				"description": "Configure TR modules.",
				"title": "TR configuration"
			},
			"upload": {
				"description": "Upload custom DPA handlers and change DPA version.",
				"title": "Coordinator upload"
			}
		},
		"maintenance": {
			"backup": {
				"description": "Backup or restore gateway.",
				"title": "Backup and restore"
			},
			"description": "Gateway maintenance tools and utilities.",
			"mender": {
				"description": "Update gateway using Mender artifacts.",
				"title": "Mender update"
			},
			"title": "Maintenance"
		},
		"profile": {
			"title": "User profile"
		}
	},
	"title": "IQRF Gateway Webapp",
	"user": {
		"email": "E-mail address",
		"language": "Language",
		"messages": {
			"createFailure": "Failed to create new user: {error}",
			"verificationSent": "An email containing instructions to verify your account was sent to your address."
		},
		"password": "Password",
		"role": "Role",
		"roles": {
			"admin": "Administrator",
			"basic": "Basic user",
			"basicadmin": "Basic admin",
			"normal": "Normal user"
		},
		"state": "State",
		"states": {
			"unverified": "Unverified",
			"verified": "Verified"
		},
		"username": "Username",
		"validation": {
			"invalidEmail": "Invalid e-mail address format.",
			"missingEmail": "Please enter your e-mail address.",
			"password": "Please enter your password.",
			"username": "Please enter your username."
		}
	}
}
