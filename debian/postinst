#!/bin/sh
# postinst script for iqrf-gateway-webapp

set -e

nginx_virtualhost_install() {
	nginx_virtualhost_old_remove
	if [ -e /etc/nginx/sites-available/iqrf-gateway-webapp.localhost ] ; then
		rm /etc/nginx/sites-available/iqrf-gateway-webapp.localhost
	fi
	hostname=$(hostname)
	if [ "$hostname" = "iqaros" ] ; then
		mv /etc/iqrf-gateway-webapp/nginx/iqrf-gateway-webapp-iqaros.localhost /etc/iqrf-gateway-webapp/nginx/iqrf-gateway-webapp.localhost
		mv /etc/iqrf-gateway-webapp/nginx/iqrf-gateway-webapp-iqaros-https.localhost /etc/iqrf-gateway-webapp/nginx/iqrf-gateway-webapp-https.localhost
		ln -s /etc/iqrf-gateway-webapp/nginx/iqrf-gateway-webapp-https.localhost /etc/nginx/sites-available/iqrf-gateway-webapp-https.localhost
	else
		ln -s /etc/iqrf-gateway-webapp/nginx/iqrf-gateway-webapp.localhost /etc/nginx/sites-available/iqrf-gateway-webapp.localhost
	fi
	if [ ! -L /etc/nginx/sites-enabled/iqrf-gateway-webapp.localhost ] ; then
		ln -s /etc/nginx/sites-available/iqrf-gateway-webapp.localhost /etc/nginx/sites-enabled/iqrf-gateway-webapp.localhost
	fi
	if deb-systemd-invoke is-enabled nginx.service ; then
		deb-systemd-invoke reload nginx.service
	fi
}

nginx_virtualhost_old_remove() {
	if [ -e /etc/nginx/sites-enabled/default ] ; then
		rm /etc/nginx/sites-enabled/default
	fi
	if [ -e /etc/nginx/sites-available/iqrf-daemon-webapp.localhost ] ; then
		rm /etc/nginx/sites-available/iqrf-daemon-webapp.localhost
	fi
	if [ -e /etc/nginx/sites-enabled/iqrf-daemon-webapp.localhost ] ; then
		rm /etc/nginx/sites-enabled/iqrf-daemon-webapp.localhost
	fi
	if [ -e /etc/nginx/sites-available/iqrf-gateway-webapp.localhost ] ; then
		rm /etc/nginx/sites-available/iqrf-gateway-webapp.localhost
	fi
}

openssl_create_ca() {
	DAEMON_CERT_DIR=/etc/iqrf-gateway-daemon/certs/core
	WEBAPP_CERT_DIR=/etc/iqrf-gateway-webapp/certs
	if [ -f "${DAEMON_CERT_DIR}/cert.pem" ] && [ -f "${DAEMON_CERT_DIR}/privkey.pem" ] ; then
		rm -rf "${WEBAPP_CERT_DIR}/cert.pem" "${WEBAPP_CERT_DIR}/privkey.pem"
		ln -s "${DAEMON_CERT_DIR}/cert.pem" "${WEBAPP_CERT_DIR}/cert.pem"
		ln -s "${DAEMON_CERT_DIR}/privkey.pem" "${WEBAPP_CERT_DIR}/privkey.pem"
		chmod 600 ${WEBAPP_CERT_DIR}/*.pem
	fi
	if [ ! -f "${WEBAPP_CERT_DIR}/cert.pem" ] || [ ! -f "${WEBAPP_CERT_DIR}/privkey.pem" ] ; then
		openssl ecparam -name secp384r1 -genkey -param_enc named_curve -out ${WEBAPP_CERT_DIR}/privkey.pem
    openssl req -new -x509 -sha256 -nodes -days 3650 \
      -subj "/CN=IQRF Gateway/C=CZ/ST=Hradec Kralove Region/L=Jicin/O=IQRF Tech s.r.o." \
      -key ${WEBAPP_CERT_DIR}/privkey.pem -out ${WEBAPP_CERT_DIR}/cert.pem
		chmod 600 ${WEBAPP_CERT_DIR}/*.pem
	fi
}

webapp_database_migration() {
	if [ ! -f /var/lib/iqrf-gateway-webapp/database.db ] && [ -f /usr/share/iqrf-gateway-webapp/app/config/database.db ] ; then
		mv /usr/share/iqrf-gateway-webapp/app/config/database.db /var/lib/iqrf-gateway-webapp/database.db
		chown www-data:www-data /var/lib/iqrf-gateway-webapp/database.db
	fi
	su - www-data -s /bin/bash -c '/usr/sbin/iqrf-gateway-webapp-manager database:create > /dev/null'
	su - www-data -s /bin/bash -c '/usr/sbin/iqrf-gateway-webapp-manager migrations:migrate --no-interaction > /dev/null'
}

webapp_iqrf_os_patches_import() {
	su - www-data -s /bin/bash -c '/usr/sbin/iqrf-gateway-webapp-manager iqrf-os:import-patches > /dev/null'
}

webapp_remove_cache() {
	if [ -d /var/cache/iqrf-gateway-webapp/cache ] ; then
		rm -rf /var/cache/iqrf-gateway-webapp/cache
	fi
}

webapp_remove_old_dirs() {
	if [ -d /usr/share/iqrf-gateway-webapp/log ] ; then
		mv /usr/share/iqrf-gateway-webapp/log/* /var/log/iqrf-gateway-webapp/
		rm -rf /usr/share/iqrf-gateway-webapp/log
	fi
	if [ -d /usr/share/iqrf-gateway-webapp/temp ] ; then
		rm -rf /usr/share/iqrf-gateway-webapp/temp
	fi
}

webapp_repair_premissions() {
	chown -R www-data:www-data /var/cache/iqrf-gateway-webapp
	chown -R www-data:www-data /var/lib/iqrf-gateway-webapp
	chown -R www-data:www-data /var/log/iqrf-gateway-webapp
}

if [ "$1" = "configure" ]; then
	openssl_create_ca
	if [ -d /etc/nginx/ ] ; then
		nginx_virtualhost_install
	fi
	webapp_remove_cache
	webapp_remove_old_dirs
	webapp_repair_premissions
	webapp_database_migration
	webapp_iqrf_os_patches_import
fi

if true; then
	if [ -e /usr/share/apache2/apache2-maintscript-helper ] ; then
		. /usr/share/apache2/apache2-maintscript-helper
		a2dissite 000-default.conf
		for mod in deflate filter headers http2 proxy proxy_http proxy_fcgi proxy_wstunnel rewrite ssl ; do
			apache2_invoke enmod $mod || true
		done
		apache2_invoke ensite iqrf-gateway-webapp.conf || exit 1
	fi
fi
